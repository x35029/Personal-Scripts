<Package>
	<Job id="CtxTotalServerSessions">
		<Comment>
			File: CtxTotalServerSessions.wsf
			Author:	Kleber Carraro
			Change History: 11/13/2011 - Script Created.
					01/21/2012 - Included filter to TS GP only; Included routine to get local server date and time; 
							Included filter to get data on Workdays/business hours only; Included Error Handler (DEBUG)
					01/23/2012 - Removed the headings of the output file.
					11/07/2013 - Removed the filter to TS GP only.
			
		</comment>
		<runtime>
			<description>
				Enum Total Sessions Per Server.
			</description>
			<example>
				CScript //nologo CtxTotalServerSessions.wsf
			</example>
  		</runtime>
		<reference object="MetaFrameCOM.MetaFrameFarm"/>
		<script language="VBScript">
		Option Explicit

		'
		' Debug Handler - Ref: http://technet.microsoft.com/en-us/library/ee156618.aspx
		'
		Public DEBUGMODE
		If WScript.Arguments.Count = 1 Then
			If WScript.Arguments.Item(0) = "" OR UCASE(WScript.Arguments.Item(0)) <> "DEBUG" Then
				DEBUGMODE = False
			ElseIf UCase(WScript.Arguments.Item(0)) = "DEBUG" Then
				WScript.Arguments.Item(0) 
				DEBUGMODE = True
			End If
		Else
			DEBUGMODE = False
		End If
		WScript.StdOut.WriteLine("Debug Mode: " & DEBUGMODE)
		If DEBUGMODE = False Then
			On Error Resume Next
		Else
			On Error Goto 0
		End If

		
		'
		' Environment Setup
		'
		Const FOR_APPENDING = 8
		Dim strScriptPath 	: strScriptPath = Replace(WScript.ScriptFullName, WScript.ScriptName, "")
		Dim arrScriptName 	: arrScriptName = Split(WScript.ScriptName, ".", -1)
		Dim strScriptName 	: strScriptName = arrScriptName(LBound(arrScriptName))  
		Dim objFSO		: Set objFSO = CreateObject( "Scripting.FileSystemObject" )
		Dim objShell	  	: Set objShell = WScript.CreateObject("WScript.Shell")
		Dim objNetwork		: Set objNetwork = CreateObject("Wscript.Network")
		Dim objNamedArguments	: Set objNamedArguments = WScript.Arguments.Named
		Dim strLogFile		: strLogFile = FnCreateLog(strScriptName, strScriptPath)
		Dim objLogFile		: Set objLogFile = objFSO.OpenTextFile(strLogFile, FOR_APPENDING)
		Dim bIsLogFileEmpty
		Dim strHeadings, strResults
				
		' 
		' Functional Variables
		'
		Dim theFarm
		
		'
		' Create MetaFrameFarm object
		'
		Set theFarm = CreateObject("MetaFrameCOM.MetaFrameFarm")
		If Err.Number <> 0 Then
			WScript.StdOut.WriteLine "Can't create MetaFrameFarm object."
			WScript.StdOut.WriteLine "(" & Err.Number & ") " & Err.Description
			WScript.StdOut.WriteBlankLines(1)
			Call ObjectCleanup()			
		Else
			Dim strFarmName : strFarmName = theFarm.FarmName
		End If
		
		'
		' Initialize the farm object.
		'
		theFarm.Initialize(MetaFrameWinFarmObject)
		If Err.Number <> 0 Then
			WScript.StdOut.WriteLine "Can't  Initialize MetaFrameFarm object."
			WScript.StdOut.WriteLine "(" & Err.Number & ") " & Err.Description
			WScript.StdOut.WriteBlankLines(1)
			Call ObjectCleanup()
		End If

		'
		' Are you Citrix Administrator?
		'
		If theFarm.WinFarmObject.IsCitrixAdministrator = 0 then
			WScript.StdOut.WriteLine "You must be a Citrix admin to run this script." 
			WScript.StdOut.WriteBlankLines(1)
			Call ObjectCleanup()
		End If

		'
		' Farm Total Sessions
		'
		Wscript.StdOut.WriteLine("Farm Total Sessions (" & theFarm.FarmName & "): " & theFarm.Sessions.Count)

		'
		' Enum Sessios by Server
		'
		' Output Headings
		strHeadings =	"ServerName" & "," & _
				"Sessions" & "," & _
				"Date"

		' Log File Headings
		If bIsLogFileEmpty = True Then
			'Removed headings to facilitate the transport to Data.xlsb
			objLogFile.WriteLine strHeadings
		End If

		' Display Headings
		'WScript.StdOut.WriteBlankLines(1)
		'Call FnShowResults(strHeadings)

		' Enum all object servers in the Farm
		Dim aServer, aWinServer, aSession, aSessionList, iCount, iBuiltinSessions

		' Get Total Sessions Excluding Builtin Sessions
		For Each aServer In theFarm.Servers
			WScript.StdOut.WriteLine("Server Name: " & aserver.servername)
			'Get Server Local Date & Time
			Dim dtmServerLocalDateTime : dtmServerLocalDateTime = GetServerLocalDateTime(aserver.servername)
			If dtmServerLocalDateTime <> "" Then
				Dim dWeekday	: dWeekday = WeekDayName(Weekday(dtmServerLocalDateTime))
				Dim strMonth	: strMonth = GetMonthName(Month(dtmServerLocalDateTime))
				Dim dYear	: dYear = Year(dtmServerLocalDateTime)
				Dim dDay	: dDay = Day(dtmServerLocalDateTime)
				Dim tHour	: tHour = Hour(dtmServerLocalDateTime)
				If ((Weekday(dtmServerLocalDateTime) <> 1) And (Weekday(dtmServerLocalDateTime) <> 7) And (tHour >= 6) And (tHour <= 18)) Then
					'''
					''' Builtin Sessions x Citrix Version
					''' 
					'''	XenApp: Remove 4
					'''	0 - Services
					'''	1 - Console
					'''	65536 - ICA-tcp
					'''	65537 - RDP-Tcp
					'''	
					'''	PS 4.X: Remove 3
					'''	0 - Console
					'''	65536 - ICA-tcp
					'''	65537 - RDP-Tcp
					'''
					Set aWinServer = aServer.WinServerObject
					Select Case aWinServer.MFWinVerMajor
						Case 4 iBuiltinSessions = 3
						Case 5 iBuiltinSessions = 4
						Case Else iBuiltinSessions = 4
					End Select 
					Set aSessionList = aServer.Sessions
					If Not IsNull(aSessionList.Count) Then
						If aSessionList.Count < iBuiltinSessions Or aSessionList.Count = 0 Then
							iCount = 0
						Else
							iCount = aSessionList.Count - iBuiltinSessions
						End If	
						strResults =	aServer.ServerName  & "," & _
								iCount & "," & _
								dtmServerLocalDateTime
						objLogFile.WriteLine strResults
						Call FnShowResults(strResults)
						strResults = ""
					End If
					Set aWinServer = Nothing
					Set aSessionList = Nothing
				End If
			End If
		Next
		Call ObjectCleanup()
		WScript.StdOut.WriteBlankLines(1)
 		WScript.StdOut.WriteLine("Log File Created: " & strLogFile)

		' 
		' Function GetServerLocalDateTime - Get Local Server Date & Time
		'
		Function GetServerLocalDateTime(strComputer)
			'''
			'''U:\CtxTotalServerSessions>net time \\w2k8tss01
			'''Current time at \\w2k8tss01 is 1/28/2012 1:36:28 PM
			'''
			'''The command completed successfully.
			'''
			'''
			'''U:\CtxTotalServerSessions>net time \\w2k3tss01
			'''Current time at \\w2k3tss01 is 1/28/2012 1:36:38 PM
			'''
			'''Local time (GMT) at \\w2k3tss01 is 1/28/2012 9:36:38 PM
			'''
			'''The command completed successfully.
			'''
			Dim objScriptExec 	: Set objScriptExec = objShell.Exec("net time \\" & strComputer)
			Dim strResult 		: strResult = objScriptExec.StdOut.ReadAll
			Dim arrResult		: arrResult = Split(strResult,vbNewLine)
			Dim arrDateTime, strDateTime
			Dim i
			Select Case True
				Case Instr(strResult,"Local time (GMT" ) > 0
					For i = 0 To UBound(arrResult)
						If Instr(arrResult(i),"Local time (GMT" ) > 0 Then
							arrDateTime = Split(arrResult(i),"is ",2)
							strDateTime = arrDateTime(1)
						End If
					Next
				Case Instr(strResult,"Current time at ") > 0
					For i = 0 To UBound(arrResult)
						If Instr(arrResult(i),"Current time at ") > 0 Then
							arrDateTime = Split(arrResult(i),"is ",2)
							strDateTime = arrDateTime(1)
						End If
					Next
				Case Else
					strDateTime = ""

			End Select
			If DEBUGMODE = True Then WScript.StdOut.WriteLine("Server Local Time: " & strDateTime)
			If strDateTime <> "" Then
				GetServerLocalDateTime = CDate(strDateTime)
			Else
				GetServerLocalDateTime = strDateTime
			End If
			Set objScriptExec = Nothing
		End Function

		' 
		' Function GetMonthName - Convert the Month from int to string (Name)
		'
		Function GetMonthName(iMonth)
			Select Case iMonth
				Case 1  GetMonthName = "January"
				Case 2  GetMonthName = "February"
				Case 3  GetMonthName = "March"
				Case 4  GetMonthName = "April"
				Case 5  GetMonthName = "May"
				Case 6  GetMonthName = "June"
				Case 7  GetMonthName = "July"		
				Case 8  GetMonthName = "August"		
				Case 9  GetMonthName = "September"		
				Case 10 GetMonthName = "October"		
				Case 11 GetMonthName = "November"		
				Case 12 GetMonthName = "December"		
			End Select
		End Function

		' 
		' Function Object Cleanup - Clean / Delete objects created during the execution.
		'
		Function ObjectCleanup()
			Set theFarm = Nothing
			objLogFile.Close
			Set objNamedArguments = Nothing
			Set objShell = Nothing
			Set objFSO = Nothing
			Set objNetwork = Nothing
			Wscript.Quit
		End Function

		'
		' Function Create Output Log File (scriptname)
		'
		Function FnCreateLog(strScriptName, strScriptPath) 
			Const FOR_READING = 1 
			Dim strLogPath	: strLogPath = strScriptPath & "Output\"
			Dim strLogName	: strLogName = strScriptName & ".csv"
			Dim strMessage
			If Not objFSO.FolderExists(strLogPath) Then
				objFSO.CreateFolder(strLogPath)
			End If
			If Not objFSO.FileExists(strLogPath & strLogName) Then
				objFSO.CreateTextFile strLogPath & strLogName
				bIsLogFileEmpty = True
			Else
				Set objLogFile = objFSO.OpenTextFile(strLogPath & strLogName, FOR_READING)
					If objLogFile.AtEndOfStream Then
						bIsLogFileEmpty = True
					Else
						bIsLogFileEmpty = False
					End If
				Set objLogFile = Nothing
			End If
			FnCreateLog = strLogPath & strLogName
		End Function

		'
		' Function Show Results on Screen
		'
		Function FnShowResults(strContents)
			WScript.StdOut.WriteLine strContents
		End Function
		</script>
	</job>
</package>